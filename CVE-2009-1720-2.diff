Fix integer overflows in compressor constructors, CVE-2009-1720 [2/2].
Index: openexr/IlmImf/ImfPxr24Compressor.cpp
===================================================================
--- openexr.orig/IlmImf/ImfPxr24Compressor.cpp
+++ openexr/IlmImf/ImfPxr24Compressor.cpp
@@ -77,6 +77,7 @@
 #include <zlib.h>
 #include <assert.h>
 #include <algorithm>
+#include <climits>
 
 using namespace std;
 using namespace IMATH_NAMESPACE;
@@ -198,6 +199,9 @@ Pxr24Compressor::Pxr24Compressor (const
                       size_t (ceil (maxInBytes * 0.01))),
                size_t (100));
 
+    if ((unsigned) maxScanLineSize > INT_MAX / (unsigned) numScanLines)
+        throw Iex::InputExc ("Error: maxScanLineSize * numScanLines would overflow.");
+
     _tmpBuffer = new unsigned char [maxInBytes];
     _outBuffer = new char [maxOutBytes];
 
Index: openexr/IlmImf/ImfRleCompressor.cpp
===================================================================
--- openexr.orig/IlmImf/ImfRleCompressor.cpp
+++ openexr/IlmImf/ImfRleCompressor.cpp
@@ -54,6 +54,9 @@ RleCompressor::RleCompressor (const Head
     _tmpBuffer (0),
     _outBuffer (0)
 {
+    if ((unsigned) maxScanLineSize > INT_MAX / 3)
+        throw Iex::InputExc ("Error: maxScanLineSize * 3 would overflow");
+
     _tmpBuffer = new char [maxScanLineSize];
     _outBuffer = new char [uiMult (maxScanLineSize, size_t (3)) / 2];
 }
